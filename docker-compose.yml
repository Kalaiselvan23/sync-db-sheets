services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: "kafka-internal.io"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka-internal.io
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-internal.io:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    networks:
      - my-network

  debezium:
    image: debezium/connect:1.9
    environment:
      BOOTSTRAP_SERVERS: kafka-internal.io:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_config
      OFFSET_STORAGE_TOPIC: debezium_offset
      STATUS_STORAGE_TOPIC: debezium_status
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    networks:
      - my-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-vol:/shared/lib/data
    ports:
      - "5433:5432"
    networks:
      - my-network

  node-app:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: node-app
    ports:
      - "8000:8000"
    environment:
      KAFKA_BROKER: kafka-internal.io:9092
      DB_HOST: postgres
      DB_PORT: 5432  
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_DBNAME: postgres
    depends_on:
      - kafka
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
volumes:
  postgres-vol:
